@import "../../../styles";

$cube-size: 150px;
$dot-size: 30px;
$cube-color: $menu-color;
$dot-color: $font-color;

.dice-container {
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
}

.dice-perspective {
  width: $cube-size;
  height: $cube-size;
  
  perspective: 1000px;
  perspective-origin: 50% 100%;
}

.dice {
  width: inherit;
  height: inherit;
  
  transform-style: preserve-3d;
  transition: transform 3s;
}

.cube{
  background: $cube-color;
  position: absolute;
  width: inherit;
  height: inherit;
  border: 2px solid black;
}

.dot {
  background-color: $dot-color;
  border-radius: 50%;
  height: $dot-size;
  width: $dot-size;
}

.one {
  display: flex;
  justify-content: center;
  align-items: center;
  height: inherit;
}

// two, three
.diagonal {
  display: flex;
  justify-content: space-between;
  align-items: center;
  flex-direction: row;
  height: inherit;
  transform: rotate(-45deg);
}

.four {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
  align-items: center;
  height: inherit;
  
  .dot{
    margin: calc(#{$cube-size / 8});
  }
}

.five {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
  align-items: center;
  flex-direction: row;
  height: inherit;
  position: relative;
  
  .dot {
    margin: calc(#{$cube-size / 8});
  }
  
  .dot:nth-child(5) {
    position: absolute;
    left: calc(25% + #{$dot-size/8});
    top: calc(25% + #{$dot-size/8});
  }
}

.six {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
  align-items: center;
  flex-direction: row;
  height: inherit;
  
  .dot {
    margin-left: calc(#{$cube-size / 8});
    margin-right: calc(#{$cube-size / 8});
  }
}


.front {
  transform:
    translateZ($cube-size/2);
}

.back {
  transform:
    rotateX(-180deg)
    translateZ($cube-size/2);
}

.right {
  transform:
    rotateY(90deg)
    translateZ($cube-size/2);
}

.left {
  transform:
    rotateY(-90deg)
    translateZ($cube-size/2);
}

.top {
  transform:
    rotateX(90deg)
    translateZ($cube-size/2);
}

.bottom {
  transform:
    rotateX(-90deg)
    translateZ($cube-size/2);
}
